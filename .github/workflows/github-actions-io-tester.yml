name: IO testing with python3 and apl-gnu
run-name: ${{ github.actor }} IO testing with python3 and apl-gnu
on: 
  push:
    branches: [ $default-branch,main ]
  pull_request:
    branches: [ $default-branch,main ]

    
    
jobs:
  build:

    runs-on: ubuntu-debian
    strategy:
      matrix:
        python-version: ["3.8"]
        #,"3.12"]

# rust env
    env:
        CARGO_TERM_COLOR: always
        # CACHE_KEY: ${{ runner.os }}-build-${{ hashFiles('**/apl_1.8-1.debian.tar.gz') }}


    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
            python3 -m pip install --upgrade pip
            pip install -r requirements.txt
     
      - name: Download Tarball
        run: |
          wget https://ftp.gnu.org/gnu/apl/apl-1.8.tar.gz
          
      - name: Extract Tarball
        run: |
          tar -xzvf apl-1.8.tar.gz
      
      - name: Configure
        run: |
          cd apl-1.8
          ./configure

      - name: Make
        run: |
          cd apl-1.8
          make

      - name: Make Install
        run: |
          cd apl-1.8
          sudo make install

      - name: Run IOtester
        run: sh ./IOtester/IOtester.sh ./IOtester/apl_input/ ./IOtester/py_input/ ./IOtester/expected/ ./IOtester/out_folder/